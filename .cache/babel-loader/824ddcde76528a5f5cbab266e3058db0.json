{"ast":null,"code":"export const breakpoints = {\n  s: 460,\n  m: 768,\n  l: 1024\n};\nexport const device = {\n  phone: `(min-width: ${breakpoints.s}px)`,\n  tablet: `(min-width: ${breakpoints.m}px)`,\n  desktop: `(min-width: ${breakpoints.l}px)`\n};\nexport const rgba = (hex, alpha) => {\n  const [r, g, b] = hex.match(/\\w\\w/g).map(x => parseInt(x, 16));\n  return `rgba(${r},${g},${b},${alpha})`;\n};\nexport const px = val => `${val}px`;\nexport default {\n  breakpoints,\n  device,\n  rgba,\n  px\n};","map":{"version":3,"sources":["/Users/yuxiao.niu/Desktop/demo-projects/my-react-starter/src/utils/css-utils.ts"],"names":["breakpoints","s","m","l","device","phone","tablet","desktop","rgba","hex","alpha","r","g","b","match","map","x","parseInt","px","val"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;AACzBC,EAAAA,CAAC,EAAE,GADsB;AAEzBC,EAAAA,CAAC,EAAE,GAFsB;AAGzBC,EAAAA,CAAC,EAAE;AAHsB,CAApB;AAMP,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,KAAK,EAAG,eAAcL,WAAW,CAACC,CAAE,KADhB;AAEpBK,EAAAA,MAAM,EAAG,eAAcN,WAAW,CAACE,CAAE,KAFjB;AAGpBK,EAAAA,OAAO,EAAG,eAAcP,WAAW,CAACG,CAAE;AAHlB,CAAf;AAMP,OAAO,MAAMK,IAAI,GAAG,CAACC,GAAD,EAAcC,KAAd,KAAgC;AAClD,QAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAaJ,GAAG,CAACK,KAAJ,CAAU,OAAV,CAAD,CAAiCC,GAAjC,CAAqCC,CAAC,IAAIC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAlD,CAAlB;AACA,SAAQ,QAAOL,CAAE,IAAGC,CAAE,IAAGC,CAAE,IAAGH,KAAM,GAApC;AACD,CAHM;AAKP,OAAO,MAAMQ,EAAE,GAAIC,GAAD,IAA2B,GAAEA,GAAI,IAA5C;AAEP,eAAe;AACbnB,EAAAA,WADa;AAEbI,EAAAA,MAFa;AAGbI,EAAAA,IAHa;AAIbU,EAAAA;AAJa,CAAf","sourcesContent":["export const breakpoints = {\n  s: 460,\n  m: 768,\n  l: 1024,\n};\n\nexport const device = {\n  phone: `(min-width: ${breakpoints.s}px)`,\n  tablet: `(min-width: ${breakpoints.m}px)`,\n  desktop: `(min-width: ${breakpoints.l}px)`,\n};\n\nexport const rgba = (hex: string, alpha: number) => {\n  const [r, g, b] = (hex.match(/\\w\\w/g) as string[]).map(x => parseInt(x, 16));\n  return `rgba(${r},${g},${b},${alpha})`;\n};\n\nexport const px = (val: string | number) => `${val}px`;\n\nexport default {\n  breakpoints,\n  device,\n  rgba,\n  px,\n};\n"]},"metadata":{},"sourceType":"module"}